version: "3.3"

networks:
  proxy:
    external: true
  internal:
    external: false

services:
  postgres:
    image: postgres:11.2-alpine
    volumes:
      - ./postgres/initdb:/docker-entrypoint-initdb.d
      - ./volume/postgres/backups:/backups
      - ./volume/postgres/data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always
    networks:
      - internal
    labels:
      - traefik.enable=false

  poster_1:
    build: ./web
    restart: always
    env_file:
      - .env
    command: "sh run.sh"
    depends_on:
      - postgres
    labels:
      - "traefik.frontend.rule=Host:poster.localhost.com;PathPrefix:/"
      - traefik.backend=poster_1
      - traefik.port=8000
      - traefik.docker.network=proxy
    networks:
      - internal
      - proxy
    

  poster_2:
    build: ./web
    restart: always
    env_file:
      - .env
    command: "sh run.sh"
    depends_on:
      - poster_1
    labels:
      - "traefik.frontend.rule=Host:poster.localhost.com;PathPrefix:/"
      - traefik.backend=poster_2
      - traefik.port=8000
      - traefik.docker.network=proxy
    networks:
      - internal
      - proxy

  nginx_poster:
    image: nginx:1.13
    volumes:
      - ./nginx/dev.conf.d/:/etc/nginx/conf.d/
      - ./volume/letsencrypt:/etc/letsencrypt/
      - ./volume/log/nginx:/var/log/nginx/
      - ./volume/log/letsencrypt:/var/log/letsencrypt/
    env_file:
      - .env
    restart: always
    depends_on:
      - poster_2
    labels:
        - traefik.enable=true
        - traefik.backend=nginx_poster
        - "traefik.frontend.rule=Host:poster.localhost.com;PathPrefix:/static/,/media/"
        - traefik.port=80
        - traefik.docker.network=proxy
    networks:
      - internal
      - proxy